{
	"info": {
		"_postman_id": "43211a5a-706d-4dea-9817-c5f9b701a403",
		"name": "Reqres | Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "1.0 GET - Set Variables Before Run",
			"item": [
				{
					"name": "Page1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7467077c-f998-4a9e-9e44-7b3c752f32a4",
								"exec": [
									"pm.collectionVariables.set(\"pageNum\", 1);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ae190815-bb35-4c8d-9fc0-2729bf841542",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "849d31ef-b28a-4e2b-bea0-c230e4c593be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/?page={{pageNum}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "{{pageNum}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Page2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "91b78760-4f3a-4c07-af40-0be3524585a3",
								"exec": [
									"pm.collectionVariables.set(\"pageNum\", 2);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8763b3c6-ad04-4475-8f8b-d7ffcf4b2768",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2d259571-ab17-437f-9002-34ffd47a9616",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/?page={{pageNum}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "{{pageNum}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Page3",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8699d89f-7567-4a5f-8c07-2b5a8e8c563a",
								"exec": [
									"pm.collectionVariables.set(\"pageNum\", 3);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b92ac53f-7869-4ac9-bc36-fec82ea7b764",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f173e823-b4cc-48e9-93ac-6ff2df68ae89",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/users/?page={{pageNum}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "{{pageNum}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "5fe5dcd3-1c45-469a-a7bf-3c07bd018b13"
		},
		{
			"name": "1.1 GET - Status Code",
			"item": [
				{
					"name": "StatusCode=200",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbcaef4e-1a85-4a55-a4f8-ed59e2dc7eba",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2c79f205-ec96-4c82-afaa-e7039bd255dc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/5"
					},
					"response": []
				},
				{
					"name": "StatusCode=404",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cbcaef4e-1a85-4a55-a4f8-ed59e2dc7eba",
								"exec": [
									"pm.test(\"Status code is 404 Not Found\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "60d0d5c5-1ec4-45ae-be46-723c83c0d354",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/23"
					},
					"response": []
				}
			],
			"id": "712b2218-9e04-4e46-b2c5-257d8cbf0b78"
		},
		{
			"name": "1.3 POST - Register",
			"item": [
				{
					"name": "Register - SUCCESSFUL",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b84df1f9-defe-4164-937e-030abfa05b93",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Id is presented\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"   pm.expect(jsonData.id).to.not.eql(null);\r",
									"   pm.expect(jsonData.id).to.not.eql(\"\");\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Token is presented\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a('string').and.not.be.empty;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f362fd41-4a1e-4a31-b8bb-16fdbc6b9e74",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/register"
					},
					"response": []
				},
				{
					"name": "Register - UNSUCCESSFUL, email is missed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b84df1f9-defe-4164-937e-030abfa05b93",
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"'Missing username' message is appeared\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Missing email or username\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0221decb-bec5-4fac-a927-b0438a904899",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/register"
					},
					"response": []
				},
				{
					"name": "Register - UNSUCCESSFUL, password is missed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b84df1f9-defe-4164-937e-030abfa05b93",
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"'Missing password' message is appeared\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fc285048-7cac-4f65-bab2-354b85d74a57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/register"
					},
					"response": []
				}
			],
			"id": "1df4986a-4091-47a2-91a7-06f960bda54e"
		},
		{
			"name": "1.4 GET - Variables from csv file",
			"item": [
				{
					"name": "Get users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eecc5de9-b62b-4746-afed-962ccbee2571",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "106f9299-b401-4bc9-a804-cc5e312155ac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/{{userNumber}}"
					},
					"response": []
				}
			],
			"id": "d8ead1db-8b5f-4bb5-bd51-33884df8c6e7"
		},
		{
			"name": "1.5 GET - Check specific tag values",
			"item": [
				{
					"name": "Check user 1 (id, email, first_name, last_name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1827d680-f678-4513-93eb-79d81ed1f792",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql(1);\r",
									"});\r",
									"\r",
									"pm.test(\"email is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.email).to.eql(\"george.bluth@reqres.in\");\r",
									"});\r",
									"\r",
									"pm.test(\"first_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.first_name).to.eql(\"George\");\r",
									"});\r",
									"\r",
									"pm.test(\"last_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.last_name).to.eql(\"Bluth\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2f27a772-911b-4150-93ab-8390f409d18a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/1"
					},
					"response": []
				},
				{
					"name": "Check user 2 (id, email, first_name, last_name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd8aa471-be7d-442d-bd7f-11659e77dd95",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql(2);\r",
									"});\r",
									"\r",
									"pm.test(\"email is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.email).to.eql(\"janet.weaver@reqres.in\");\r",
									"});\r",
									"\r",
									"pm.test(\"first_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.first_name).to.eql(\"Janet\");\r",
									"});\r",
									"\r",
									"pm.test(\"last_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.last_name).to.eql(\"Weaver\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "bb194b02-50f3-4b13-bcfd-a5565d6e3b55",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/2"
					},
					"response": []
				},
				{
					"name": "Check user 3 (id, email, first_name, last_name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cd8aa471-be7d-442d-bd7f-11659e77dd95",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"id is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.id).to.eql(3);\r",
									"});\r",
									"\r",
									"pm.test(\"email is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.email).to.eql(\"emma.wong@reqres.in\");\r",
									"});\r",
									"\r",
									"pm.test(\"first_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.first_name).to.eql(\"Emma\");\r",
									"});\r",
									"\r",
									"pm.test(\"last_name is correct\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data.last_name).to.eql(\"Wong\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9360953d-a686-47e1-998a-29748c7f5485",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{URL}}/api/users/3"
					},
					"response": []
				}
			],
			"id": "8a820cd3-a587-460c-acba-d203ddd25dd3"
		},
		{
			"name": "1.6 POST, PUT, PATCH, DELETE",
			"item": [
				{
					"name": "Create USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e0df67d9-e4a6-47b1-ad30-ec6a5531dd61",
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "189f69e3-5d6b-472b-847d-18359e790f07",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ReisalinStout\",\r\n    \"job\": \"alchemist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/users/?page={{pageNum}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"users",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "{{pageNum}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd457fdc-6eab-4cbe-85b7-bfa8da0bee70",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "0ccc0907-8434-4b7c-8b95-d9efd510675e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ReisalinStout\",\r\n    \"job\": \"alchemist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users/2"
					},
					"response": []
				},
				{
					"name": "Change USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd457fdc-6eab-4cbe-85b7-bfa8da0bee70",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2596c6d7-5a95-4454-8ce0-0f7e7d991105",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ReisalinStout\",\r\n    \"job\": \"alchemist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users/2"
					},
					"response": []
				},
				{
					"name": "Delete USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd457fdc-6eab-4cbe-85b7-bfa8da0bee70",
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9f3f4b76-b973-4994-9f05-b044f114797d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"ReisalinStout\",\r\n    \"job\": \"alchemist\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{URL}}/api/users/2"
					},
					"response": []
				}
			],
			"id": "01088df2-f96d-4274-9192-f91e8f94bab7"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4ac97735-4ef3-4873-bc65-46efa084c663",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "346afef5-51ff-472b-babe-c8948de4a3ec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "pageNum",
			"value": "",
			"type": "string"
		}
	]
}